HYPHEN_INSENSITIVE="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"
plugins=(git z fzf docker taskwarrior zsh-autosuggestions docker-compose poetry)
setopt extendedglob
source $ZSH/oh-my-zsh.sh
#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# Example aliases
#

#alias t="$HOME/.dotfiles/scripts/task-git.sh --task-git-push"
alias t="task"
alias taskrc="vim ~/.taskrc"
alias zshrc="vim ~/.zshrc"
alias vimrc="vim ~/.vimrc"
alias nvimrc="nvim ~/.config/nvim/init.vim"
alias vw="pyenv shell vimwiki && vim -c VimwikiIndex"
alias i3rc="vim ~/.i3/config"
alias swayrc="vim ~/.config/sway/config"
alias waybarc="vim ~/.config/waybar/config"
alias lx="ls -X"
alias disco='python -m unittest discover'
alias grep='grep --color=auto'
alias dc="docker-compose"

ca () {
    conda activate $@
}

ng () {
    ssh -X -t noggin 'tmux attach'
}

rbusy () {
    ssh -t noggin rbusy $1 $2 $3
}

cavis () {
    ca $@ -l && ca $@ -l | awk '{print $1".res"}' | xargs vesta
}

weather () {
    if [ -z "$1" ]
    then
        curl "http://wttr.in/\~Cambridge";
    else
        curl "http://wttr.in/$1";
    fi
    return
}

nf () {
    if [ -z "$1" ]; then
        echo "Enter a port!"
    elif [ -z "$2" ]; then
        ssh -N -f -L localhost:"$1":localhost:$1 noggin
    elif [ -z "$3" ]; then
        ssh -N -f -L localhost:"$1":localhost:$2 noggin
    else
        ssh -N -f -L localhost:"$1":localhost:$2 $3
    fi
}

DIRSTACKSIZE=9
DIRSTACKFILE=~/.zdirs
if [[ -f $DIRSTACKFILE ]] && [[ $#dirstack -eq 0 ]]; then
  dirstack=( ${(f)"$(< $DIRSTACKFILE)"} )
    [[ -d $dirstack[1] ]] && cd $dirstack[1] && cd $OLDPWD
fi
chpwd() {
  print -l $PWD ${(u)dirstack} >$DIRSTACKFILE
}

work () {
    if [ "$(tmux ls | grep -c org)" -eq "1" ]; then
        tmux attach -t org
    else
        tmux new-session -s org \; send-keys 'ng' C-m \; split-window -h -p 20 \; send-keys 'vim ~/documents/org/to-do.org' C-m \,
    fi
}

unplug () {
    xrandr --output VGA-0 --off && xrandr --output DP-0 --off && xrandr --output HDMI1 --off
}

plugin () {
    xrandr --output eDP1 --primary && xrandr --output DP1 --primary --mode 1920x1080 --right-of eDP1 && xrandr --output HDMI2 --mode 1920x1080 --right-of DP1 && nitrogen --restore
}

open () {
    xdg-open $@ 2>/dev/null
}
